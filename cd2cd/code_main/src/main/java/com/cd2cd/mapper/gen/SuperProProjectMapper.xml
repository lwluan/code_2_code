<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cd2cd.mapper.gen.SuperProProjectMapper">
  <resultMap id="BaseResultMap" type="com.cd2cd.domain.ProProject">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="artifact_id" jdbcType="VARCHAR" property="artifactId" />
    <result column="package_type" jdbcType="VARCHAR" property="packageType" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="context_path" jdbcType="VARCHAR" property="contextPath" />
    <result column="local_path" jdbcType="VARCHAR" property="localPath" />
    <result column="ignore_tables" jdbcType="VARCHAR" property="ignoreTables" />
    <result column="git_url" jdbcType="VARCHAR" property="gitUrl" />
    <result column="git_account" jdbcType="VARCHAR" property="gitAccount" />
    <result column="git_password" jdbcType="VARCHAR" property="gitPassword" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, description, group_id, artifact_id, package_type, version, context_path, 
    local_path, ignore_tables, git_url, git_account, git_password, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.cd2cd.domain.gen.ProProjectCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pro_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="mysqlOffset != null and mysqlLength != null">
      <![CDATA[ limit #{mysqlOffset} , #{mysqlLength} ]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pro_project
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pro_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cd2cd.domain.gen.ProProjectCriteria">
    delete from pro_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cd2cd.domain.ProProject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pro_project (name, description, group_id, 
      artifact_id, package_type, version, 
      context_path, local_path, ignore_tables, 
      git_url, git_account, git_password, 
      create_time, update_time)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, 
      #{artifactId,jdbcType=VARCHAR}, #{packageType,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{contextPath,jdbcType=VARCHAR}, #{localPath,jdbcType=VARCHAR}, #{ignoreTables,jdbcType=VARCHAR}, 
      #{gitUrl,jdbcType=VARCHAR}, #{gitAccount,jdbcType=VARCHAR}, #{gitPassword,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cd2cd.domain.ProProject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pro_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="artifactId != null">
        artifact_id,
      </if>
      <if test="packageType != null">
        package_type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="contextPath != null">
        context_path,
      </if>
      <if test="localPath != null">
        local_path,
      </if>
      <if test="ignoreTables != null">
        ignore_tables,
      </if>
      <if test="gitUrl != null">
        git_url,
      </if>
      <if test="gitAccount != null">
        git_account,
      </if>
      <if test="gitPassword != null">
        git_password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="artifactId != null">
        #{artifactId,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null">
        #{packageType,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="contextPath != null">
        #{contextPath,jdbcType=VARCHAR},
      </if>
      <if test="localPath != null">
        #{localPath,jdbcType=VARCHAR},
      </if>
      <if test="ignoreTables != null">
        #{ignoreTables,jdbcType=VARCHAR},
      </if>
      <if test="gitUrl != null">
        #{gitUrl,jdbcType=VARCHAR},
      </if>
      <if test="gitAccount != null">
        #{gitAccount,jdbcType=VARCHAR},
      </if>
      <if test="gitPassword != null">
        #{gitPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cd2cd.domain.gen.ProProjectCriteria" resultType="java.lang.Long">
    select count(*) from pro_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pro_project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.artifactId != null">
        artifact_id = #{record.artifactId,jdbcType=VARCHAR},
      </if>
      <if test="record.packageType != null">
        package_type = #{record.packageType,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.contextPath != null">
        context_path = #{record.contextPath,jdbcType=VARCHAR},
      </if>
      <if test="record.localPath != null">
        local_path = #{record.localPath,jdbcType=VARCHAR},
      </if>
      <if test="record.ignoreTables != null">
        ignore_tables = #{record.ignoreTables,jdbcType=VARCHAR},
      </if>
      <if test="record.gitUrl != null">
        git_url = #{record.gitUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.gitAccount != null">
        git_account = #{record.gitAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.gitPassword != null">
        git_password = #{record.gitPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pro_project
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      artifact_id = #{record.artifactId,jdbcType=VARCHAR},
      package_type = #{record.packageType,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      context_path = #{record.contextPath,jdbcType=VARCHAR},
      local_path = #{record.localPath,jdbcType=VARCHAR},
      ignore_tables = #{record.ignoreTables,jdbcType=VARCHAR},
      git_url = #{record.gitUrl,jdbcType=VARCHAR},
      git_account = #{record.gitAccount,jdbcType=VARCHAR},
      git_password = #{record.gitPassword,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cd2cd.domain.ProProject">
    update pro_project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="artifactId != null">
        artifact_id = #{artifactId,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null">
        package_type = #{packageType,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="contextPath != null">
        context_path = #{contextPath,jdbcType=VARCHAR},
      </if>
      <if test="localPath != null">
        local_path = #{localPath,jdbcType=VARCHAR},
      </if>
      <if test="ignoreTables != null">
        ignore_tables = #{ignoreTables,jdbcType=VARCHAR},
      </if>
      <if test="gitUrl != null">
        git_url = #{gitUrl,jdbcType=VARCHAR},
      </if>
      <if test="gitAccount != null">
        git_account = #{gitAccount,jdbcType=VARCHAR},
      </if>
      <if test="gitPassword != null">
        git_password = #{gitPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cd2cd.domain.ProProject">
    update pro_project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=VARCHAR},
      artifact_id = #{artifactId,jdbcType=VARCHAR},
      package_type = #{packageType,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      context_path = #{contextPath,jdbcType=VARCHAR},
      local_path = #{localPath,jdbcType=VARCHAR},
      ignore_tables = #{ignoreTables,jdbcType=VARCHAR},
      git_url = #{gitUrl,jdbcType=VARCHAR},
      git_account = #{gitAccount,jdbcType=VARCHAR},
      git_password = #{gitPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>